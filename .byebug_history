c
quit
c
quit
t.content_type
t.class
t = mime_type[0]
mime_type.class
mime_types.class
mime_type[0]
mime_type = MIME::Types.type_for("jpg")
mime_type = MIME::Type.match("jpg")
mime_type = MIME::Type.type_for("jpg")
mime_type.content_type
mime_type.methods
mime_type.inspect
mime_type
mime_type = MIME::Types.type_for("jpg")
mime_type = MIME::Types.type_for()
match[:ext]
match
n
quit
res.fullpath =~ /\.(?<ext>[a-zA-Z0-9]{1,4})$/
res.fullpath =~ /\.(?<ext>[a-zA-Z0-9]{1,3})$/
res.fullpath =~ /\.([a-zA-Z0-9]{1,3})$/
res.fullpath =~ /\.[a-zA-Z0-9]{1,4}$/
res.fullpath =~ /\.[a-zA-Z0-9]{1,3}$/
res.fullpath =~ /\.[a-zA-Z0-9]{1}$/
res.fullpath =~ /\.[a-zA-Z0-9]{3}$/
res.fullpath =~ /\.[a-zA-Z0-9]*$/
res.fullpath =~ /\.[a-z0-9]*$/
res.fullpath =~ /\.[a-z0-9]$/
res.fullpath =~ /\.[a-z]*$/
res.fullpath =~ /\.[a-z]$/
res.fullpath =~ /\....$/
res.fullpath =~ /\...$/
res.fullpath =~ /\.../
res.fullpath =~ /\../
res.fullpath =~ /\.jpg/
static_file_pattern.match(res.fullpath)
res.fullpath
static_file_pattern
c
quit
@controller.new(req, res, params)
params
n
self
res
req
c
template_path
n
quit
template_path
n
quit
y
quit
file
n
quit
__FILE__
e.class
e.message
e
c
params
c
flash
c
JSON.load(flash)
JSON
flash
n
res
req
c
n
route
rout
n
c
flash
c
flash
c
flash
q
c
flash[:message]
flash
c
q
flash[:message]
flash
c
n
@new.to_json
@new
res
n
s
flash
n
s
n
flash[:message]
flash
s
flash
flash[:message]
n
flash[:message]
flash
params[:message]
params
quit
params["message"]
params
quit
@pattern.named_captures.each do |k,v|
@pattern.named_captures
match[1]
match[2]
match[1]
match[0]
match
@pattern
params
quit
@method
req.request_method
req
c
@already_built_response
q
req.fullpath
req.full_path
req.class
req
